package routines;

/*
 * user specification: the function's comment should contain keys as follows: 1. write about the function's comment.but
 * it must be before the "{talendTypes}" key.
 * 
 * 2. {talendTypes} 's value must be talend Type, it is required . its value should be one of: String, char | Character,
 * long | Long, int | Integer, boolean | Boolean, byte | Byte, Date, double | Double, float | Float, Object, short |
 * Short
 * 
 * 3. {Category} define a category for the Function. it is required. its value is user-defined .
 * 
 * 4. {param} 's format is: {param} <type>[(<default value or closed list values>)] <name>[ : <comment>]
 * 
 * <type> 's value should be one of: string, int, list, double, object, boolean, long, char, date. <name>'s value is the
 * Function's parameter name. the {param} is optional. so if you the Function without the parameters. the {param} don't
 * added. you can have many parameters for the Function.
 * 
 * 5. {example} gives a example for the Function. it is optional.
 */

import java.util.UUID;

public class strtouuid {

    /**
     * helloExample: not return value, only print "hello" + message.
     * 
     * 
     * {talendTypes} String
     * 
     * {Category} User Defined
     * 
     * {param} string("world") input: The string need to be printed.
     * 
     * {example} helloExemple("world") # hello world !.
     */
    public static UUID convert(String hexstr) {
    	UUID res_uuid;
    	
        if (hexstr == null) {
            return null;
        }
        
        // Let's try numeric type
        if (hexstr.length() < 32) {
        	// Try convert to number
        	long n = 0L;
        	try {
        		n = Long.parseLong(hexstr);
        	} catch (NumberFormatException ex) {
        		return null;
        	}
        	return new java.util.UUID(n, n);
        }
        
        // Openbravo format does not contain '-'
        if (!hexstr.contains("-")) { 
	        String str_uuid = hexstr.substring(0,8);
	    	str_uuid += "-" + hexstr.substring(8,12);
	    	str_uuid += "-" + hexstr.substring(12,16);
	    	str_uuid += "-" + hexstr.substring(16,20);
	    	str_uuid += "-" + hexstr.substring(20);
	        res_uuid = UUID.fromString(str_uuid);
        } else {
        	res_uuid = UUID.fromString(hexstr);
        }
        
        return res_uuid;
    }
    
    public static UUID convert(String hexstr, boolean replace_if_null) {
    	UUID res_uuid;
    	
        if (hexstr == null) {
            return UUID.randomUUID();
        }
        
        // Let's try numeric type if length is less than 32
        if (hexstr.length() < 32) {
        	// Try convert to number
        	long n = 0L;
        	try {
        		n = Long.parseLong(hexstr);
        	} catch (NumberFormatException ex) {
        		return UUID.randomUUID();
        	}
        	return new java.util.UUID(n, n);
        }
        
        // Openbravo format does not contain '-'
        if (!hexstr.contains("-")) { 
	        String str_uuid = hexstr.substring(0, 7);
	    	str_uuid += "-" + hexstr.substring(8,11);
	    	str_uuid += "-" + hexstr.substring(12,15);
	    	str_uuid += "-" + hexstr.substring(16,19);
	    	str_uuid += "-" + hexstr.substring(20);
	        res_uuid = UUID.fromString(str_uuid);
        } else {
        	res_uuid = UUID.fromString(hexstr);
        }
        
        return res_uuid;
    }
}
